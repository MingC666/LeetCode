class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        int n1 = s1.size();
        int n2 = s2.size();
        if(n1 > n2) return false;
        
        // Initialize the map
        vector<int> f1 (26,0);
        vector<int> f2 (26,0);
        
        
        // mapping 's1' and first substr of 's2'
        for(int i=0; i<n1; i++)
        {
            f1[s1[i] -'a']++;
            f2[s2[i] -'a']++;
        }
        
        int count = 0;
        for(int i=0; i<26; i++)
        {
            if(f1[i] == f2[i])
                count++;
        }
        
        
        // loop substring of 's2'
        for (int i = 0; i<n2-n1; i++) {
            int left = s2[i]-'a';
            int right = s2[i+n1]-'a';
            if (count == 26)
                return true;
            
            f2[right]++;
            if(f2[right]==f1[right])
                count++;
            else if(f2[right] == f1[right]+1)
                count--;
            f2[left]--;
            if(f2[left]==f1[left])
                count++;
            else if(f2[left]==f1[left]-1)
                count--;
        }
        return count==26;
    }   
};