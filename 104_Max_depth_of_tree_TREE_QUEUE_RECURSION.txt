/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        queue<TreeNode*> q;
        int lv = 0;
        if(root != nullptr)
            q.push(root);
        while(!q.empty())
        {
            int n = q.size();
            for(int i=0; i<n; ++i)
            {
                TreeNode *t = q.front();;
                if(t->left)
                    q.push(t->left);
                if(t->right)
                    q.push(t->right);
                q.pop();
            }
            ++lv;
        }
        return lv;
    }
    
    int Solution2(TreeNode* root) {
        if(root == nullptr) return 0;
        return max(maxDepth(root->left), maxDepth(root->right))+1;
    }
};