class Solution {
public:
    // key-value paired
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        int n = strs.size();
        vector<vector<string>> result;
        if(n==0) return {};
        
        vector<int> alphabet;
        unordered_map<string, vector<string>> table;
        int val=0;
        for(string s:strs)
        {
            alphabet.assign(26, 0);
            
            for(auto c:s)
            {
                alphabet[c-'a'] += 1;
            }
            string key = "";
            for(int i:alphabet)
                key += "#" + to_string(i);
            table[key].push_back(s);
        }
        
        for(auto it:table)
            result.push_back(it.second);
        
        return result;
    }
    
    // key-value paired
    vector<vector<string>> solution1(vector<string>& strs) {
        int n = strs.size();
        vector<vector<string>> result;
        if(n==0) return {};
        
        unordered_map<string, vector<string>> table;
        for(auto s : strs)
        {
            string key = s;
            sort(key.begin(), key.end());
            table[key].push_back(s);
        }
        
        for(auto it:table)
            result.push_back(it.second);
        
        return result;
    }
};