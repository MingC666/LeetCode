class Solution {
public:
    int minCostClimbingStairs(vector<int>& cost) {
        int n = cost.size();
        int opt[n];
        opt[0] = 0;
        opt[1] = min(cost[0], cost[1]);
        
        for(int i=2; i<n; i++)
        {
            opt[i] = min(opt[i-1]+cost[i], opt[i-2]+cost[i-1]);
        }
        
        return opt[n-1];
    }
    
    int solution00(vector<int>& cost) {
        int n = cost.size();
        int opt[n];
        opt[0] = cost[0];
        opt[1] = cost[1];
        
        for(int i=2; i<n; i++)
        {
            opt[i] = min(opt[i-1], opt[i-2]) + cost[i];
        }
        
        
        for(auto i:opt) cout << i << "  " ;
        return min(opt[n-1], opt[n-2]);
    }
};