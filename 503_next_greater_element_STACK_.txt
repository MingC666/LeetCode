class Solution {
public:
    //backward
    vector<int> nextGreaterElements(vector<int>& nums) {
        int n = nums.size();
        vector<int> result(n, -1);
        
        stack<int> st;
        for(int i=2*n-1; i>=0; --i)
        {
            while(!st.empty() && nums[i%n]>=nums[st.top()])
                st.pop();
            if(!st.empty())
                result[i%n] = nums[st.top()];
            st.push(i%n);
        }
        
        return result;
    }
    
    // inorder
    vector<int> version1(vector<int>& nums) {
        int n = nums.size();
        vector<int> result(n, -1);
        
        stack<int> st;
        for(int i=0; i<2*n; ++i)
        {
            while(!st.empty() && nums[i%n]>nums[st.top()])
            {
                if(result[st.top()] == -1)
                    result[st.top()] = nums[i%n];
                st.pop();
            }
            st.push(i%n);
        }
        
        return result;
    }
};